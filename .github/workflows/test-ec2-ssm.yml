name: test ec2 role via ssm

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write    # required for OIDC
  contents: read

jobs:
  ssm-test:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-west-2
      INSTANCE_IDS: "i-08feb3f160318730c"
    steps:
      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::020408743573:role/GitHubActions-EC2DeployRole

      - name: Send SSM command
        id: send
        run: |
          CMD_ID=$(aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --comment "SSM smoke test triggered from GitHub Actions" \
            --parameters commands='["set -e","uname -a","uptime"]' \
            --instance-ids $INSTANCE_IDS \
            --query "Command.CommandId" --output text)
          echo "command_id=$CMD_ID" >> "$GITHUB_OUTPUT"
          echo "Sent command: $CMD_ID"

      - name: Fetch SSM command output
        run: |
          CMD_ID="${{ steps.send.outputs.command_id }}"
          for IID in $INSTANCE_IDS; do
            echo "---- $IID ----"
            for i in {1..20}; do
              STATUS=$(aws ssm get-command-invocation \
                --command-id "$CMD_ID" \
                --instance-id "$IID" \
                --query "Status" --output text 2>/dev/null || echo pending)
              [[ "$STATUS" =~ ^(Success|Failed|TimedOut|Cancelled)$ ]] && break
              sleep 5
            done
            echo "Status: $STATUS"
            aws ssm get-command-invocation \
              --command-id "$CMD_ID" \
              --instance-id "$IID" \
              --query "StandardOutputContent" --output text || true
            >&2 aws ssm get-command-invocation \
              --command-id "$CMD_ID" \
              --instance-id "$IID" \
              --query "StandardErrorContent" --output text || true
          done
